TARGET = @TARGET@

PROFILE = @PROFILE@

# Add flags if necessary
RUSTFLAGS =

TARGET_DIR = $(CURDIR)/rust/target
LIBDIR = $(TARGET_DIR)/$(TARGET)/$(subst dev,debug,$(PROFILE))
STATLIB = $(LIBDIR)/libovbars.a
PKG_LIBS = -L$(LIBDIR) -lovbars

CARGO_BUILD_ARGS = --lib --profile $(PROFILE) --manifest-path=./rust/Cargo.toml --target-dir $(TARGET_DIR)

all: C_clean

$(SHLIB): $(STATLIB)

CARGOTMP = $(CURDIR)/.cargo
VENDOR_DIR = $(CURDIR)/rust/vendor

$(STATLIB):
	# In some environments, ~/.cargo/bin might not be included in PATH, so we need
	# to set it here to ensure cargo can be invoked. It is appended to PATH and
	# therefore is only used if cargo is absent from the user's PATH.
	export PATH="$(PATH):$(HOME)/.cargo/bin" && \
	  export CC="$(CC)" && \
	  export CFLAGS="$(CFLAGS)" && \
	  export RUSTFLAGS="$(RUSTFLAGS)" && \
		if [ -f "$(CURDIR)/rust/vendor.tar.xz" ]; then \
		  mkdir -p "$(VENDOR_DIR)" && \
			$(TAR) --extract --xz --file "$(CURDIR)/rust/vendor.tar.xz" -C "$(VENDOR_DIR)" --strip-components=1 && \
			mkdir -p "$(CARGOTMP)" && \
			cp "$(CURDIR)/rust/vendor-config.toml" "$(CARGOTMP)/config.toml"; \
		fi && \
		if [ "$(NOT_CRAN)" != "true" ]; then \
			export CARGO_HOME="$(CARGOTMP)"; \
			export CARGO_BUILD_JOBS=2; \
		fi && \
	  if [ "$(TARGET)" != "wasm32-unknown-emscripten" ]; then \
	    cargo build $(CARGO_BUILD_ARGS); \
	  else \
	    export CARGO_PROFILE_DEV_PANIC="abort" && \
	    export CARGO_PROFILE_RELEASE_PANIC="abort" && \
	    cargo +nightly build $(CARGO_BUILD_ARGS) --target $(TARGET) -Zbuild-std=panic_abort,std; \
	  fi

		if [ "$(NOT_CRAN)" != "true" ]; then \
			rm -Rf "$(CARGOTMP)" "$(VENDOR_DIR)" "$(LIBDIR)/build"; \
		fi

C_clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS)

clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS) rust/target
